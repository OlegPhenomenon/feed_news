server {
  listen 443 ssl;

  server_name products.ee;

#  add_header 'Access-Control-Allow-Origin' '*' always;
#  add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;

  ssl on;
  ssl_certificate /etc/letsencrypt/live/products.ee/fullchain.pem;
  ssl_certificate_key  /etc/letsencrypt/live/products.ee/privkey.pem;
  # ssl_trusted_certificate /etc/ssl/private/letsencrypt.pem;

  # client_header_buffer_size 64k;
  # large_client_header_buffers 4 64k;

  root /var/www/public;

  access_log /var/log/nginx/app.access.log;
  error_log /var/log/nginx/app.error.log info;

  passenger_enabled on;
  passenger_app_env production;

  location /cable {
    passenger_app_group_name products_websocket;
    passenger_force_max_concurrent_requests_per_process 0;

    proxy_pass http://app;
    proxy_http_version 1.1;
    proxy_set_header X-Forwarded-Proto https;
    proxy_set_header X-Forwarded-Ssl on;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "Upgrade";
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header Host $http_host;
    proxy_redirect off;
    proxy_headers_hash_max_size 512;
    proxy_headers_hash_bucket_size 128;
  }

  client_max_body_size 100m;

  location ~ ^assets {
    add_header Last-Modified "";
    gzip_static on;
    expires 1M;
    access_log off;
    add_header Cache-Control "public";
    }

  # redirect server error pages to the static page /50x.html
  error_page 500 502 503 504 /50x.html;
  location = /50x.html {
    root html;
  }

  if (-f $document_root/system/maintenance.html)
  {
    rewrite ^(.*)$ /system/maintenance.html last;
    break;
  }

  location / {
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $host;    # If the file exists as a static file serve it directly without
    proxy_set_header X-Forwarded-Proto https;
    proxy_set_header X-Forwarded-Ssl on;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_headers_hash_max_size 512;
    proxy_headers_hash_bucket_size 128;

    # running all the other rewrite tests on it
    if (-f $request_filename) {
      break;
    } 
    # if it's there on the filesystem then rewrite
    # the url to add /index.html to the end of it
    # and then break to send it to the next config rules.
    if (-f $request_filename/index.html) {
      rewrite (.*) $1/index.html break;
    }
    # it adds .html to the end of the url and then checks
    # the filesystem for that file. If it exists, then we
    # rewrite the url to have explicit .html on the end
    # and then send it on its way to the next config rule.
    # if there is no file on the fs then it sets all the
    # necessary headers and proxies to our upstream pumas
    if (-f $request_filename.html) {
      rewrite (.*) $1.html break;
    }    if (!-f $request_filename) {
      proxy_pass http://app;
      break;
    }
  }
}
