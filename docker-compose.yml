version: "3"
services:
  app:
    build:
      context: .
    command: bash -c "rm -f tmp/pids/server.pid && bundle exec rails s -p 3000 -b '0.0.0.0'"
    # Best way to store sensentive values in env
    # env_file: .env
    environment:
      - REDIS_URL=redis://redis:6379/1
      - RAILS_ENV=development
      - DATABASE_HOST=postgres
      - DATABASE_USER=postgres
      - PARALLEL_WORKERS=1
    volumes:
      - .:/app
    ports:
      - "3000:3000"
    depends_on:
      - postgres
  
  postgres:
    image: postgres:13-alpine
    command: ["postgres", "-c", "fsync=false", "-c", "full_page_writes=off"]
    environment:
    # Best way to store sensentive values in env
    # env_file: .env
      - DATABASE_HOST=postgres
      - DATABASE_USER=postgres
      - POSTGRES_HOST_AUTH_METHOD="trust"
      - POSTGRES_PASSWORD=postgres
    volumes:
      - ./tmp/db:/var/lib/postgresql/data
    ports:
      - "5434:5432"
    restart: always

  sidekiq:
    build:
      context: .
    command: bundle exec sidekiq --environment development -C config/sidekiq.yml 
    links:
      - postgres
      - redis
    volumes:
      - ../../:/myapp
    # Best way to store sensentive values in env
    # env_file: .env
    environment:
      - REDIS_URL=redis://redis:6379/1
      - RAILS_ENV=development
      - DATABASE_HOST=postgres
      - DATABASE_USER=postgres
      - PARALLEL_WORKERS=1
  redis:
    image: redis
    volumes:
      - ../../tmp/db:/var/lib/redis/data
# version: '3.8'
# services:
#   db:
#     image: postgres
#     environment:
#       POSTGRES_USER: postgres
#       POSTGRES_PASSWORD: password
#     volumes:
#       - postgres:/var/lib/postgresql/data
#   web:
#     build: .
#     command: bash -c "rm -f tmp/pids/server.pid && bundle exec rails s -p 3000 -b '0.0.0.0'"
#     volumes:
#       - .:/Rails-Docker
#     ports:
#       - "3000:3000"
#     depends_on:
#       - db
#     environment:
#       - RAILS_MASTER_KEY=this_would_be_the_key
# volumes:
#   postgres:
